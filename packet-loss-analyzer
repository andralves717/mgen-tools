#! /usr/bin/awk -f

# count number of received packets and print statistics (per flow and total)
# Copyright (C) 2008 Erik Auerswald <auerswald@fg-networking.de>
# 
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
# usage: packet-loss-analyzer [FILE...]
# received and expected packets for every flow are printed seperately
# the total number of received and expected packets is printed as well
#
# packets lost after the last received packet are not counted

# count received packets and determine range of sequence numbers
/RECV/ {
  split($3, flow, />/)
  split($4, seq, />/)

  if (flows[flow[2]] == "") {
    min[flow[2]] = seq[2]
    max[flow[2]] = seq[2]
  } else {
    if (seq[2] < min[flow[2]]) {
      min[flow[2]] = seq[2]
    }
    if (seq[2] > max[flow[2]]) {
      max[flow[2]] = seq[2]
    }
  }
  flows[flow[2]]++
}

# print statistics
END {
  for (i in flows) {
    print "received " flows[i] " of " max[i]-min[i]+1 " packets from flow " i " (" (flows[i]*100.)/(max[i]-min[i]+1) "%)"
    received += flows[i]
    total += max[i]-min[i]+1
  }
  print "--------------------------------------------------------------------------------"
  if (total == "") {
    print "no packets received"
  } else {
    print "received " received " of " total " packets from all flows (" received*100.0/total "%)"
    print "lost " total - received " packets (" (total-received)*100.0/total "%)"
  }
  print "--------------------------------------------------------------------------------"
}
